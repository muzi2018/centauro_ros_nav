<?xml version="1.0" ?>
<launch>
    <arg name="gazebo" default="true"/>

    <arg name="empty_map" default="true"/>

    <arg name="use_sim_time" default="true"/>
    <arg name="use_teb" default="false"/>
    
    <!-- parameter load  -->
    <param name="robot_description" textfile="$(find centauro_urdf)/urdf/centauro.urdf"/>
    <param name="robot_description_semantic" textfile="$(find centauro_srdf)/srdf/centauro.srdf"/>
    <group if = "$(arg gazebo)">
        <include file="$(find centauro_gazebo)/launch/centauro_perception.launch" pass_all_args="true"/>
    </group>
    <!-- MoveBase for starting Nav Stack with config file -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

        <remap from="map" to="projected_map"/>

        <!-- Remap for later Node -->
        <remap from="/cmd_vel" to="/omnisteering/cmd_vel"/>
        
        <rosparam file="$(find centauro_ros_nav)/config/centauro/move_base_params.yaml" command="load"/>
        <rosparam file="$(find centauro_ros_nav)/config/centauro/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find centauro_ros_nav)/config/centauro/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find centauro_ros_nav)/config/centauro/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find centauro_ros_nav)/config/centauro/global_costmap_params.yaml" command="load" />

        <rosparam if="$(arg use_teb)" file="$(find centauro_ros_nav)/config/centauro/teb_local_planner_params.yaml" command="load" />
        <rosparam unless="$(arg use_teb)" file="$(find centauro_ros_nav)/config/centauro/dwa_local_planner_params.yaml" command="load" />

        <param name="use_sim_time" value="$(arg use_sim_time)"/>

        <param if="$(arg use_teb)" name="base_local_planner" type="string" value="teb_local_planner/TebLocalPlannerROS" />
        <param unless="$(arg use_teb)" name="base_local_planner" type="string" value="dwa_local_planner/DWAPlannerROS" />

    </node>

    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="map_tf_odom"
            args="0 0 0 0 0 0 1 map odom" /> -->

    <!-- Load Empty Map -->
    <node if="$(arg empty_map)" pkg="map_server" name="empty_map" type="map_server" args="$(find centauro_ros_nav)/maps/empty.yaml">
        <remap from="map" to="projected_map"/>
        <param name="frame_id" value="pelvis"/>
    </node>
    
    
    <!-- Use Octomap in case of not empty map -->
    <group unless="$(arg empty_map)">
        <node pkg="octomap_server" type="octomap_server_node" name="octomap_server_velodyne">
            <param name="resolution" value="0.25" />  <!-- 0.05 -->
            <param name="frame_id" type="string" value="odom" />
            <param name="sensor_model/max_range" value="20.0" />
            <remap from="cloud_in" to="/velodyne_points" />
            
            <remap from="octomap_point_cloud_centers" to="octomap_velodyne" />
            
            <param name="latch" value="false"/> 
                        
            <!-- <param name="base_frame_id" value="head_down" /> -->
            <param name="base_frame_id" value="pelvis" />
            <param name="pointcloud_min_z" value="-0.5" />
            <param name="pointcloud_max_z" value="2.5" />
            <param name="sensor_model/hit" value="0.55" />  <!--default 0.7-->
            <param name="sensor_model/miss" value="0.45" />  <!--default 0.4-->
            <param name="sensor_model/min" value="0.45" />  <!--default 0.12-->
            <param name="sensor_model/max" value="0.55" />  <!--default 0.97-->
        </node>
    </group>

</launch>

